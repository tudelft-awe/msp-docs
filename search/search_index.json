{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"MkDocs Material Template \u00b6 This is an MkDocs Material Template repository. It enables a useful set of extensions and plugins by default, and contains a Makefile that uses Docker to serve the documentation locally, and a Github workflow to publish the documentation on Github Pages by default. To use, invoke: make This will publish the documentation at localhost:8000 by default, and watch for any changes to the documentation source files. Other targets in the Makefile include: serve (default) \u2014 Serves the documentation and watches for changes. build \u2014 Builds the documentation. gh-deploy \u2014 Deploys the documentation to Github Pages. version \u2014 Prints the version information. help \u2014 Prints help information. MkDocs Material Documentation Customization \u00b6 Change the fields in mkdocs.yml to suit your needs. In particular, change the site_name , site_description and site_author , and the URLs for repo_url (where the Github button links to) and edit_uri (where the pages can be edited). Adding Plugins \u00b6 A few plugins have been enabled by default. To add additional plugins, add them to the plugins section of mkdocs.yml ( documentation ) and the required packages to mkdocs_requirements.txt . The plugins are automatically installed into the Docker image. Updating MkDocs Material \u00b6 To change the version of MkDocs Material, change the version number in mkdocs_requirements.txt . The version is automatically updated in the Docker image as well. Serving on a Different Port \u00b6 By default the documentation is served on port 8000 . To change the default temporarily, invoke make like this: make PORT = 8080 To permanently chang the port, change the value of PORT in the Makefile . PORT ?= 8080 Makefile on Top-Level \u00b6 If you want to have the Makefile on the top level instead of in the docs/ directory, move it to the top level directory and change the ROOT variable in the Makefile to: ROOT ?= $( DIR ) /. Note the slash-dot /. at the end. The ROOT directory points to the directory with mkdocs.yml relative to the Makefile . Different branch \u00b6 The template assumes your default branch is named main or master . If it's named something else, change the on push branches in .github/workflows/docs.yml : on : push : branches : - my-docs-branch","title":"MkDocs Material Template"},{"location":"#mkdocs-material-template","text":"This is an MkDocs Material Template repository. It enables a useful set of extensions and plugins by default, and contains a Makefile that uses Docker to serve the documentation locally, and a Github workflow to publish the documentation on Github Pages by default. To use, invoke: make This will publish the documentation at localhost:8000 by default, and watch for any changes to the documentation source files. Other targets in the Makefile include: serve (default) \u2014 Serves the documentation and watches for changes. build \u2014 Builds the documentation. gh-deploy \u2014 Deploys the documentation to Github Pages. version \u2014 Prints the version information. help \u2014 Prints help information. MkDocs Material Documentation","title":"MkDocs Material Template"},{"location":"#customization","text":"Change the fields in mkdocs.yml to suit your needs. In particular, change the site_name , site_description and site_author , and the URLs for repo_url (where the Github button links to) and edit_uri (where the pages can be edited).","title":"Customization"},{"location":"#adding-plugins","text":"A few plugins have been enabled by default. To add additional plugins, add them to the plugins section of mkdocs.yml ( documentation ) and the required packages to mkdocs_requirements.txt . The plugins are automatically installed into the Docker image.","title":"Adding Plugins"},{"location":"#updating-mkdocs-material","text":"To change the version of MkDocs Material, change the version number in mkdocs_requirements.txt . The version is automatically updated in the Docker image as well.","title":"Updating MkDocs Material"},{"location":"#serving-on-a-different-port","text":"By default the documentation is served on port 8000 . To change the default temporarily, invoke make like this: make PORT = 8080 To permanently chang the port, change the value of PORT in the Makefile . PORT ?= 8080","title":"Serving on a Different Port"},{"location":"#makefile-on-top-level","text":"If you want to have the Makefile on the top level instead of in the docs/ directory, move it to the top level directory and change the ROOT variable in the Makefile to: ROOT ?= $( DIR ) /. Note the slash-dot /. at the end. The ROOT directory points to the directory with mkdocs.yml relative to the Makefile .","title":"Makefile on Top-Level"},{"location":"#different-branch","text":"The template assumes your default branch is named main or master . If it's named something else, change the on push branches in .github/workflows/docs.yml : on : push : branches : - my-docs-branch","title":"Different branch"},{"location":"deploying/","text":"Deploying \u00b6 This documentation can be deployed on Github ( .github/workflows/docs.yml ) or Gitlab ( .gitlab-ci.yml ).","title":"Deploying"},{"location":"deploying/#deploying","text":"This documentation can be deployed on Github ( .github/workflows/docs.yml ) or Gitlab ( .gitlab-ci.yml ).","title":"Deploying"},{"location":"update-template/","text":"Updating to Latest Template \u00b6 This page describes how to update your documentation to include the latest changes to the template repository. Template Remote \u00b6 To update to the latest version of the template, first ensure the template repository is added as a remote for the documentation repository: git remote -v origin git@github.com:MyUsername/my-docs-repo.git ( fetch ) origin git@github.com:MyUsername/my-docs-repo.git ( push ) template git@github.com:Virtlink/mkdocs-material-template.git ( fetch ) template git@github.com:Virtlink/mkdocs-material-template.git ( push ) If not, add the template remote repository: git remote add template git@github.com:Virtlink/mkdocs-material-template.git Fetch Latest Changes \u00b6 Fetch the changes in the template remote: git fetch template Merge Latest Changes \u00b6 Merge the latest changes from the template's main branch into your repository: git merge template/main Unrelated Histories If you get the error fatal: refusing to merge unrelated histories , then your documentation repository was never based on the template. However, you can force Git to merge the template anyway by using this command: git merge template/main --allow-unrelated-histories Fix Any Conflicts, and Commit \u00b6 Now use the Git command line to fix any merge conflicts, and commit the result. Fix the Breaking Changes \u00b6 New versions of MkDocs and MkDocs Material can have breaking changes. Find them here .","title":"Updating to Latest Template"},{"location":"update-template/#updating-to-latest-template","text":"This page describes how to update your documentation to include the latest changes to the template repository.","title":"Updating to Latest Template"},{"location":"update-template/#template-remote","text":"To update to the latest version of the template, first ensure the template repository is added as a remote for the documentation repository: git remote -v origin git@github.com:MyUsername/my-docs-repo.git ( fetch ) origin git@github.com:MyUsername/my-docs-repo.git ( push ) template git@github.com:Virtlink/mkdocs-material-template.git ( fetch ) template git@github.com:Virtlink/mkdocs-material-template.git ( push ) If not, add the template remote repository: git remote add template git@github.com:Virtlink/mkdocs-material-template.git","title":"Template Remote"},{"location":"update-template/#fetch-latest-changes","text":"Fetch the changes in the template remote: git fetch template","title":"Fetch Latest Changes"},{"location":"update-template/#merge-latest-changes","text":"Merge the latest changes from the template's main branch into your repository: git merge template/main Unrelated Histories If you get the error fatal: refusing to merge unrelated histories , then your documentation repository was never based on the template. However, you can force Git to merge the template anyway by using this command: git merge template/main --allow-unrelated-histories","title":"Merge Latest Changes"},{"location":"update-template/#fix-any-conflicts-and-commit","text":"Now use the Git command line to fix any merge conflicts, and commit the result.","title":"Fix Any Conflicts, and Commit"},{"location":"update-template/#fix-the-breaking-changes","text":"New versions of MkDocs and MkDocs Material can have breaking changes. Find them here .","title":"Fix the Breaking Changes"}]}